{"version":3,"sources":["shared/context/AuthContext.js","shared/components/UIElements/LoadingSpinner/LoadingSpinner.js","shared/components/UIElements/Backdrop/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","asOverlay","className","Backdrop","onClick","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","children","NavLinks","useContext","to","exact","SideDrawer","show","content","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","getItem","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","userData","parse","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.6de3efb9.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    token: null,\r\n    userId: null,\r\n    login: () => {},\r\n    logout: () => {}\r\n});","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = ({ asOverlay }) => {\n  return (\n    <div className={`${asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = ({ onClick }) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={ onClick }></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useCallback, useState, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        const tokenExpirationDate =\r\n            expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); // one hour\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem(\r\n            'userData',\r\n            JSON.stringify({ \r\n            userId: uid, \r\n            token, \r\n            expiration: tokenExpirationDate.toISOString() \r\n            })\r\n        );\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    if (localStorage.getItem('userData')) {\r\n        localStorage.removeItem('userData');\r\n    }    \r\n    }, []);\r\n\r\n    useEffect(() => {     // Auto logout\r\n    if (token && tokenExpirationDate) {\r\n        const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n        logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n        clearTimeout(logoutTimer);\r\n    }\r\n    }, [token, logout, tokenExpirationDate]);\r\n\r\n    useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n        userData && \r\n        userData.token && \r\n        new Date(userData.expiration) > new Date()\r\n        ) {\r\n        login(userData.userId, userData.token, new Date(userData.expiration))\r\n    }\r\n    }, [login]);\r\n\r\n    return { token, login, logout, userId };\r\n};","import React from 'react';\nimport './MainHeader.css';\n\nconst MainHeader = ({ children }) => {\n  return <header className=\"main-header\">{ children }</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { NavLink } from 'react-router-dom';\n\nimport './NavLinks.css';\n\nconst NavLinks = () => {\n  const { isLoggedIn, userId, logout } = useContext(AuthContext); // we'll get a context obj\n  return <ul className=\"nav-links\">\n    <li>\n      <NavLink to=\"/\" exact>ALL USERS</NavLink>\n    </li>\n    {isLoggedIn && <li>\n      <NavLink to={`/${userId}/places`}>MY PLACES</NavLink>\n    </li>}\n    {isLoggedIn && <li>\n      <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n    </li>}\n    {!isLoggedIn && <li>\n      <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n    </li>}\n\n    {isLoggedIn && <li>\n      <button onClick = {logout}>LOGOUT</button>\n    </li>}\n  </ul>\n};\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = ({ children, show, onClick }) => {\n  const content = <CSSTransition \n      in = {show} /* in prop tels when to show the component */\n      timeout = {250} \n      classNames = \"slide-in-left\"\n      mountOnEnter /* After the first enter transition the component will stay mounted, */\n      unmountOnExit /* to unmount the component after it finishes exiting. */\n    > \n      <aside \n        className = \"side-drawer\"\n        onClick = {onClick}\n      >\n        {children}\n      </aside> \n    </CSSTransition>;\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = () => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n        <SideDrawer \n          show = {drawerIsOpen}\n          onClick = {closeDrawerHandler }\n        >\n          <nav className=\"main-navigation__drawer-nav\">\n            <NavLinks />\n          </nav>\n        </SideDrawer>\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Your Places</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { lazy, Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner/LoadingSpinner';\n\nimport { AuthContext } from './shared/context/AuthContext';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = lazy(() => import('./user/pages/Users'));\nconst NewPlace = lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = lazy(() => import('./user/pages/Auth'));\n\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch> {/* switch is enable only one route if it is acitvated */}\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">  {/* this route containes must be lower in code than places/new */}\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ \n        isLoggedIn: !!token, \n        token, \n        userId, \n        login, \n        logout \n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense \n            fallback={<div className = \"center\">< LoadingSpinner /></div>}>\n              {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}