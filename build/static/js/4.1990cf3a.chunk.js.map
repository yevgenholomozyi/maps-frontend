{"version":3,"sources":["shared/components/UIElements/Card/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload/ImageUpload.js","user/pages/Auth.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","id","onInput","element","label","rows","placeholder","errorText","initialValid","valueProp","useReducer","inputState","dispatch","useEffect","changeHandler","event","touchHandler","elem","onChange","onBlur","htmlFor","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","center","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","onSubmitHandler","a","preventDefault","process","JSON","stringify","userId","token","login","formData","FormData","append","name","image","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.1990cf3a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../../util/validators';\r\n\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n        const { val, validators } = action;\r\n        return {\r\n            ...state,\r\n            value: val,\r\n            isValid: validate(val, validators)\r\n        };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = ({\r\n    id, \r\n    onInput,\r\n    validators,\r\n    element,\r\n    label,\r\n    rows,\r\n    type,\r\n    placeholder,\r\n    errorText,\r\n    initialValid, \r\n    valueProp\r\n}) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: valueProp || '',\r\n    isTouched: false,\r\n    isValid: initialValid || false\r\n  });\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const elem =\r\n    element === 'input' ? (\r\n      <input\r\n        id={id}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={id}\r\n        rows={rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        placeholder={placeholder}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={id}>{label}</label>\r\n      {elem}\r\n      {!inputState.isValid && inputState.isTouched && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useReducer, useCallback } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE': \r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n          if (!state.inputs[inputId]) {\r\n            continue; // don't run code bellow but start next iteration\r\n          }\r\n          if (inputId === action.inputId) {\r\n            formIsValid = formIsValid && action.isValid; // yeilds false if any of the expression is false\r\n          } else {\r\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n            }\r\n        }\r\n          return {\r\n            ...state,\r\n            inputs: {\r\n              ...state.inputs,\r\n              [action.inputId]: { value: action.value, isValid: action.isValid }\r\n            },\r\n            isValid: formIsValid\r\n        };\r\n        case 'SET_DATA':\r\n          const { inputs } = action;\r\n          return {\r\n            inputs,\r\n            isValid: action.formIsValid\r\n          }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => { // useCallback is required in order to prevent an infinite loop\r\n        dispatch({\r\n          type: 'INPUT_CHANGE',\r\n          value,\r\n          isValid,\r\n          inputId: id\r\n        });\r\n    }, []); //this array defines dependecies under which titleHandler should rerun. If empty, no rerun shall be performed\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => { // allows to replace stores and the validity of the form\r\n      dispatch({\r\n        type: 'SET_DATA',\r\n        inputs: inputData,\r\n        formIsValid: formValidity\r\n      })\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from '../Button/Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = ({id ,errorText, onInput, center}) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader(); // helps read files\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    onInput(id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useContext, Fragment } from 'react';\r\nimport Button from  '../../shared/components/FormElements/Button/Button';\r\nimport Input from  '../../shared/components/FormElements/Input/Input';\r\nimport Card from  '../../shared/components/UIElements/Card/Card';\r\nimport ErrorModal from '../../shared/components/Modal/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload/ImageUpload';\r\n\r\nimport { \r\n    VALIDATOR_EMAIL,\r\n    VALIDATOR_MINLENGTH, \r\n    VALIDATOR_REQUIRE\r\n} from \"../../shared/util/validators\";\r\n\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/AuthContext\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setIsLoginMode] = useState(true); // managing login\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n   \r\n    const [{inputs, isValid}, inputHandler, setFormData] = useForm( \r\n        {\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        }, \r\n        false\r\n    );\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                ...inputs,\r\n                name: undefined,\r\n                image: undefined\r\n                }, \r\n                inputs.email.isValid && inputs.password.isValid\r\n            );\r\n        } else {\r\n            setFormData(\r\n                {\r\n                ...inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                }, \r\n                image: {\r\n                    value: null,\r\n                    isValid: false\r\n                }\r\n            }, \r\n            false\r\n        );\r\n    } \r\n        setIsLoginMode(prevMode => !prevMode);\r\n    };\r\n    \r\n    const onSubmitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        if (isLoginMode) {\r\n            try {\r\n                const { userId, token } = await sendRequest( // destructuring response\r\n                    `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n                    'POST',\r\n                    JSON.stringify({\r\n                        email: inputs.email.value,\r\n                        password: inputs.password.value\r\n                    }),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                auth.login(userId, token);\r\n            } catch (err) {}\r\n        } else {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('email', inputs.email.value);\r\n                formData.append('name', inputs.name.value);\r\n                formData.append('password', inputs.password.value);\r\n                formData.append('image', inputs.image.value);\r\n\r\n                const { userId, token } = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/users/signup`, // fetch and the response must be awaited\r\n                    'POST',\r\n                    formData,\r\n                );\r\n            auth.login(userId, token);\r\n          } catch (err) {}\r\n        }\r\n    };\r\n            \r\n    return (\r\n        <Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Card className = \"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n                <form onSubmit = {onSubmitHandler}>\r\n                    <h2 className = \"authentication__header\"> Login Required </h2>\r\n                    <hr/>\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element = \"input\"\r\n                            type = \"text\"\r\n                            placeholder = \"enter your name\"\r\n                            id = \"name\" \r\n                            validators = {[VALIDATOR_REQUIRE()]}\r\n                            label = \"Your Name\"\r\n                            errorText = \"Please provide a valid name\"\r\n                            onInput = {inputHandler}\r\n                        /> \r\n                    )}\r\n\r\n                    {!isLoginMode && <ImageUpload center id = \"image\" onInput = {inputHandler}/>}\r\n                    \r\n                        <Input\r\n                            type = \"email\"\r\n                            placeholder = \"enter your email\"\r\n                            element = \"input\"\r\n                            id = \"email\" \r\n                            validators = {[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\r\n                            label = \"Email\"\r\n                            errorText = \"Please enter a valid email\"\r\n                            onInput = {inputHandler}\r\n                        /> \r\n\r\n                        <Input\r\n                            type = \"password\"\r\n                            element = \"input\"\r\n                            placeholder = \"enter your password\"\r\n                            id = \"password\" \r\n                            validators = {[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)]}\r\n                            label = \"Password\"\r\n                            onInput = {inputHandler}\r\n                            errorText = \"Please provide a valid pasword\"\r\n                        /> \r\n\r\n                {/*  <Input\r\n                        type = \"password\"\r\n                        element = \"input\"\r\n                        placeholder = \"enter your password\"\r\n                        id = \"confirmPassword\" \r\n                        initialValid = {true}\r\n                        validators = {[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n                        label = \"Confirm Password\"\r\n                        errorText = \"Paswword should be not shorter than 5 symbols\"\r\n                        onInput = {inputHandler}\r\n                    />  */}\r\n                    <Button \r\n                        type = \"submit\" \r\n                        disabled = {!isValid}\r\n                        >\r\n                            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                    </Button>\r\n            </form>\r\n            <Button inverse onClick = {switchModeHandler}>\r\n                SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n            </Button>\r\n        </Card>\r\n    </Fragment>\r\n    );\r\n};\r\n \r\nexport default Auth;\r\n"],"sourceRoot":""}